version: '3.8'
services:
  web:
    build: .
    volumes:
      - ./www:/var/www/html
    ports:
      - "8080:80"
    depends_on:
      - db
    environment:
      - APP_ENV=docker

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root  # Cambia esto por una contraseña segura
      MYSQL_DATABASE: db_restpro
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: root  # Debe coincidir con la contraseña en MYSQL_ROOT_PASSWORD
    ports:
      - "8081:80"
    depends_on:
      - db

  postgres_db:  # Nuevo servicio para PostgreSQL
    image: postgres:13
    environment:
      POSTGRES_USER: postgres_user  # Usuario de la base de datos
      POSTGRES_PASSWORD: postgres_password  # Contraseña de la base de datos
      POSTGRES_DB: api_db  # Base de datos específica para la API
    ports:
      - "5432:5432"  # Puerto por defecto de PostgreSQL
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Volumen para persistencia de datos

  pgadmin:  # Opcional: Interfaz gráfica para gestionar PostgreSQL
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin  # Contraseña para pgAdmin
    ports:
      - "8082:80"
    depends_on:
      - postgres_db

  ia:
    image: python:3.9  # Usa la versión de Python que necesites
    volumes:
      - ./ia:/app  # Mapea tu carpeta de scripts de Python
    working_dir: /app
    command: |
      bash -c "pip install -r requirements.txt && python app.py"  # Instalar dependencias y luego ejecutar la aplicación
    ports:
      - "8000:5000"
    depends_on:
      - postgres_db  # Tu API dependerá de PostgreSQL

volumes:
  db_data:
  postgres_data:
